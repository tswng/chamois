<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClearText.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAASySURBVFhH7VdZT2RFFK7b3Rc69ECzBGeQzZngg7KFEAmb
        PhAaWTMB06DQA5iARmXpwNDs+9Js3YIJq09q4oMPmvgLRk1MxtFkZoIa4zK+DHRiTMYHXyY6+H3XW517
        iSFK+sEHOvm66lTVOeerc+reOlfMzMyciunpaa2dnJwUfr9f2d7eFjs7O2J/f1/s7e1pYH93d1dsbm6K
        qakp5aSN0xDuSEdsT4LOl5aWRHd3tygqKnIXFha+l5OT805ubu67EgUFBW+7XK5n5ufnNRL/ZMfoR8I0
        qC9U5ubmbLOzszbZYi4aBFQ4uSqE+CMqKupuRkbGnZSUlLsE+rdjYmJ+xty9pqamy6urqyrsqEY7sGED
        MZM/ItzhIBYL7mBkZETD6Oio1k5MTIje3l7YF9NOp/Or/v5+sby8LBYWFgSMi42NDVFbWyssFkuoqqrq
        edrw+XxhfYJRXFxcZHTCPsMEDDsX+fn5V2DIq6rqa3A4AFwHfMDrwGdAyGq1etGOAiM6hgBYEw+B94E3
        AOpcx9p+m83Wk5CQ8IrX63XSh5FEmAAmrMPDwyIuLs4FAr9B+Tg2NvaX+Pj4Q+yaCMHI95C/wZqQPnYk
        gfH7mD9Ae49r9bFD2PqdthwOx+3GxsZ0Rg7RCB/UMBOSwIRlfX1dPIEflB6C8UUqcJ5hZYpkX8oybdwZ
        56TMPs6CSE9PfwG2vh0cHFR4kI3OCe2Pztki1woeNYFD9TSUHiHvl5FnhcR4spnDlZUVLV2UuZZgn2Oc
        47mgDB0rHCqpqake2PoR5+YCiTH80l+YgAQdcceZmZkkcNzX10cCGjGyb21tVUtKSlQaolxdXR1dU1Nj
        JQnuHHN2j8ejzcnNpKWlaQQQTYckZ/T5rwjAuI0nGT+f3W7/aG1tTXR1dVH+ICsra5wvJxCJg3wLT4GL
        oR8bG1MjQkDPrzo0xIMu1pKTk+/wnLS3twtFUT7Py8t7a2trS1RUVFzCgfu1oaHhRaZifHw8KqIR4HON
        nz8xMfELRqCzs5PyDbwRgyRQWVn5GOTDuro6NyMAApGJAJUYAZ3AclJS0peMgE7gU7yG32QKQOAi5FB9
        fX2zTiByETgncE7gnMA5gf8TAT8I3DIQ+AQEgjoBvoqPQEC+iiNKQN4FSyBw00DgBggEDATuGwhE7i7A
        ZSQjEACBA8NldBMEcBdpl9ElyA9A4KVI3IZPQUkjoF/HNv067kKdt8UIdHR0UN7Mzs5+lRHAdeyA/CGq
        4xJGAPWA7SwEtCoGJSEJPOrp6bkC5wqqGwsrHJRoVpRWNpZfKLkpqwMDA1boKowQ5GgUtlp5hghY4ZAl
        2TXY+gF6MToBk0+TQEeMAD42mII/YfTxYDCo1X0MK/uBQEDrc5eUGQ3qMC2U2XKeOvxUQ33plhHQa8LT
        I8B6rri4+EkoHaO4eA514IXm5ub4lpYWJ1vZPymjNclutzuhra3NgQpqErZ+QjrtjAB8mHyaBIYHIecX
        jQqlj4Ej4AD47oz4GngATCBVLNdZTZt8mgSWy1xApqhuo0tLSxvKy8s7y8rKrgHt/wFc74Huy6iUn5WV
        8knnhEmQ9bpOQmE+mWu2Z4HUhS1+V5h8/I0Z8RdDJi0W/05RvAAAAABJRU5ErkJggg==
</value>
  </data>
</root>